@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}
/* 전체 바 스타일 */
progress::-webkit-progress-bar {
  background-color: #000000;
  border-radius: 10px;
}

/* 채워지는 부분 스타일 */
progress::-webkit-progress-value {
  background-color: #00ff80;
  border-radius: 10px;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

@keyframes shine {
  0% {
    background-position: 200% 0%;
  }
  100% {
    background-position: -200% 0%;
  }
}

html {
  width: 100%;
  height: 100%;
}

body {
  width: 100%;
  height: 100%;
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-use-select: none;
  user-select: none;
}

img {
  -webkit-user-drag: none;
}

/* Add this to your existing global.css file */

/* Card flip animation styles */
.card-container {
  perspective: 800px;
  width: 100%;
  height: 100%;
  position: relative;
  animation-duration: 0.3s;
}

.card-entry-animation {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  animation: cardEntryAnimation 0.7s cubic-bezier(0.25, 0.25, 0.5, 1.0) forwards;
}

.card-entry-animation-reverse {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  animation: cardEntryAnimationReverse 0.7s cubic-bezier(0.25, 0.25, 0.5, 1.0) forwards;
}

.deck-entry-animation-reverse {
  animation: deckEntryAnimationReverse 0.7s cubic-bezier(0.25, 0.25, 0.5, 1.0) forwards;
  transform: translateY(-6.3rem);
}
.deck-entry-animation {
  animation: deckEntryAnimation 0.7s  cubic-bezier(0.25, 0.25, 0.5, 1.0) forwards;
  transform: translateY(-6.3rem);
}

.card-face {
  position: absolute;
  width: 100%;
  height: 100%;
}

.is-ready-to-attack-inf {
  animation: isReadyToAttackInfAnimation 4s infinite ease-in-out forwards;
}


@keyframes isReadyToAttackInfAnimation {
  0% {
    transform: perspective(800px) rotateY(-20deg) rotateZ(0deg);
  }
  50% {
    transform: perspective(800px) rotateY(-30deg) rotateZ(2deg) ;
  }
  100% {
    transform: perspective(800px)rotateY(-20deg) rotateZ(0deg);
  }
}

@keyframes isReadyToAttackApproachAnimation {
  0% {
    opacity: 0;
    transform: perspective(800px) scale(0.3) translateZ(-200px);
  }
  100% {
    opacity: 1;
    transform: perspective(800px) scale(1) translateZ(0);
  }
}

.drop-card {
  animation: dropCardAnimation 1s cubic-bezier(1, 0, 0, 1) forwards;
}

@keyframes dropCardAnimation {
  0% {
    transform: perspective(800px) translateZ(10rem);
  }
  30% {
    box-shadow:
    0 0 10px 4px rgba(255, 255, 255, 0),
    0 0 10px 5px rgb(0, 251, 255, 0);
  }
  71% {
    transform: perspective(800px) translateZ(0rem);
    
    box-shadow:
      0 0 10px 4px rgba(255, 255, 255, 1),
      0 0 10px 4px rgb(0, 251, 255);
  }
  100% {
    /* 다시 투명하게 돌아가도록 */
    box-shadow:
      0 0 10px 4px rgba(255, 255, 255, 0),
      0 0 10px 4px rgb(0, 251, 255, 0);
  }
}

.attack {
  animation: attackAnimation 1.9s cubic-bezier(0.1, 1, 0.7, 1) forwards;
}

@keyframes attackAnimation {
  0% {
    transform: perspective(800px) translateZ(0rem) rotateY(0deg) rotateZ(0deg);
  }
  19% {
    transform: perspective(800px) translateZ(0rem) rotateY(0deg) rotateZ(0deg);
  }
  20% {
    transform: perspective(800px) translateZ(0rem) rotateY(-20deg) rotateZ(-10deg);
  }
  90% {
    transform: perspective(800px) translateZ(10rem) rotateY(0deg) rotateZ(0deg);
  }
  100% {
    transform: perspective(800px) translateZ(0rem) rotateY(0deg);
  }
}

/* Fix the class name to match the new animation */
.is-ready-to-attack-apr {
  animation: isReadyToAttackApproachAnimation 0.7s cubic-bezier(0.19, 1, 0.22, 1) forwards;
}

@keyframes deckEntryAnimation {
  0% {
    transform: translateY(-6.3rem);
  }
  100% {
    transform: translateY(40rem);
  }
}

@keyframes deckEntryAnimationReverse {
  0% {
    transform: translateY(-6.3rem);
  }
  100% {
    transform: translateY(-40rem);
  }
}

@keyframes cardEntryAnimation {
  0% {
    opacity: 0.9;
    transform: perspective(800px) translateY(300px) translateX(100px) rotateY(100deg);
  }
  50% {
    opacity: 0.9;
    transform: perspective(800px) translateY(300px) translateX(100px) rotateY(100deg);
  }
  100% {
    transform: perspective(800px) translateY(0) translateX(0) rotateY(0deg);
  }
}

@keyframes cardEntryAnimationReverse {
  0% {
    opacity: 0.9;
    transform: perspective(800px) translateY(-300px) translateX(-100px) rotateY(-100deg);
  }
  50% {
    opacity: 0.9;
    transform: perspective(800px) translateY(-300px) translateX(-100px) rotateY(-100deg);
  }
  100% {
    transform: perspective(800px) translateY(0) translateX(0) rotateY(0deg);
  }
}

.droppable-glow {
  animation: drop-shadow-glow .8s ease-in-out infinite;
}

@keyframes drop-shadow-glow {
  0% {
    box-shadow:
      0 0 12px 8px rgba(255, 255, 255, 0),
      0 0 8px 8px rgba(0, 251, 255, 0);
  }

  50% {
    box-shadow:
      0 0 4px 4px rgba(255, 255, 255, 1),
      0 0 8px 8px rgb(0, 255, 255);
  }

  /* 100% 시점: 다시 투명 상태로 복귀 */
  100% {
    box-shadow:
      0 0 8px 8px rgba(255, 255, 255, 0),
      0 0 8px 8px rgba(0, 251, 255, 0);
  }
}

@keyframes slidePause {
  0% {
    transform: translateX(-140vw) translateY(-10vw) rotateZ(-10deg) skewX(var(--tilt-angle));
  }
  20% {
    transform: translateX(-140vw) translateY(-10vw) rotateZ(-10deg) skewX(var(--tilt-angle));
  }
  35% {
    transform: translateX(calc(-10vw)) translateY(-30vw) rotateZ(-10deg) skewX(var(--tilt-angle));
  }
  45% {
    transform: translateX(calc(-10vw)) translateY(-30vw) rotateZ(-10deg) skewX(var(--tilt-angle));
  }
  60% {
    transform: translateX(calc(110vw)) translateY(-50vw) rotateZ(-10deg) skewX(var(--tilt-angle));
  }
  100% {
    transform: translateX(calc(110vw)) translateY(-50vw) rotateZ(-10deg) skewX(var(--tilt-angle));
  }
}

@keyframes slidePauseReverse {
  0% {
    transform: translateX(-140vw) translateY(-10vw) rotateZ(-190deg) skewX(var(--tilt-angle));
  }
  20% {
    transform: translateX(-140vw) translateY(-10vw) rotateZ(-190deg) skewX(var(--tilt-angle));
  }
  35% {
    transform: translateX(calc(-10vw)) translateY(-30vw) rotateZ(-190deg) skewX(var(--tilt-angle));
  }
  45% {
    transform: translateX(calc(-10vw)) translateY(-30vw) rotateZ(-190deg) skewX(var(--tilt-angle));
  }
  60% {
    transform: translateX(calc(110vw)) translateY(-50vw) rotateZ(-190deg) skewX(var(--tilt-angle));
  }
  100% {
    transform: translateX(calc(110vw)) translateY(-50vw) rotateZ(-190deg) skewX(var(--tilt-angle));
  }
}

.banner-slide {
  animation: slidePause 3.1s cubic-bezier(0.4, 0, 0.2, 1);
  position: fixed;
  left: 0;
  right: 0;
  margin: 0 auto;
  text-align: center;
  background: linear-gradient(to bottom, 
    rgb(147, 147, 147) 0%,
    rgba(128, 128, 128) 100%
  );
  backdrop-filter: blur(4px);
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.banner-slide-reverse {
  animation: slidePauseReverse 3.1s cubic-bezier(0.4, 0, 0.2, 1);
  position: fixed;
  left: 0;
  right: 0;
  margin: 0 auto;
  text-align: center;
  background: linear-gradient(to bottom, 
    rgb(147, 147, 147) 0%,
    rgba(128, 128, 128) 100%
  );
  backdrop-filter: blur(4px);
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.banner-slide-reverse span {
  display: block;
  text-align: center;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
}

.banner-slide span {
  display: block;
  text-align: center;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
}

[data-nextjs-toast] {
  display: none !important;
}

.attack-effect {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1000;
}

.attack-effect video {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.attack-effect.opponent {
  top: 0;
  left: 0;
}

.attack-effect.player {
  bottom: 0;
  right: 0;
}

/* 파일 끝에 추가 */
.banner-reverse {
  direction: ltr;
  text-align: right;
  /* transform: rotateY(180deg); */
  /* transform: rotateZ(180deg); */
}

.banner-reverse span {
  direction: ltr;
  display: inline-block;
}
